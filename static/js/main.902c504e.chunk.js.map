{"version":3,"sources":["components/Button/Button.module.css","components/AvatarImage/AvatarImage.module.css","components/Content/Content.module.css","components/Content/Chats/MessagesField/Messages/Messages.module.css","components/Content/Chats/ChatsList/ChatsList.module.css","components/Content/Chats/MessagesField/Messages/MyMessage/MyMessage.module.css","components/Button/Button.jsx","components/AvatarImage/AvatarImage.jsx","components/Header/AuthInfo/AuthInfo.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/FormsControls/FormsControls.js","utilities/validators/validators.js","components/Content/Login/LoginForm/LoginForm.jsx","components/Content/Login/Login.jsx","components/Content/Login/LoginContainer.jsx","redux/messages-reducer.js","components/Content/Chats/MessagesField/NewMessage/NewMessage.jsx","components/Content/Chats/MessagesField/NewMessage/NewMessageContainer.jsx","components/Content/Chats/MessagesField/Messages/Messages.jsx","components/Content/Chats/MessagesField/Messages/MyMessage/MyMessage.jsx","components/Content/Chats/MessagesField/Messages/MyMessage/MyMessageContainer.jsx","components/Content/Chats/MessagesField/Messages/Message/Message.jsx","components/Content/Chats/MessagesField/Messages/MessagesContainer.jsx","components/Content/Chats/MessagesField/MessagesField.jsx","components/HOC/withAuthRedirect.js","components/Content/Chats/ChatsList/ChatsList.jsx","components/Content/Chats/ChatsList/ChatItem/ChatItem.jsx","components/Content/Chats/ChatsList/ChatsListContainer.jsx","components/Content/Chats/Chats.jsx","components/Content/Content.jsx","redux/redux-store.js","App.js","reportWebVitals.js","index.js","components/Content/Chats/MessagesField/NewMessage/NewMessage.module.css","components/Content/Chats/MessagesField/Messages/Message/Message.module.css","components/FormsControls/FormsControls.module.css","App.module.css","components/Header/Header.module.css","components/Content/Chats/MessagesField/MessagesField.module.css","components/Content/Chats/Chats.module.css","components/Content/Chats/ChatsList/ChatItem/ChatItem.module.css","components/Header/AuthInfo/AuthInfo.module.css","components/Content/Login/Login.module.css","components/Content/Login/LoginForm/LoginForm.module.css"],"names":["module","exports","Button","props","className","style","button","text","AvatarImage","link","avatar","src","alt","AuthInfoBar","isAuth","login","setUserData","authInfoBar","authUser","to","onClick","Header","id","header","header__logo","header__authInfo","AuthInfo","SET_USER_DATA","initialState","email","rememberMe","localStorage","getItem","JSON","parse","type","payload","authReducer","state","action","setItem","stringify","connect","auth","Input","input","meta","touched","error","hasError","wrapperInput","wrapperInput__formControlsInput","fieldInput","required","value","maxLengthCreator","maxLength","length","maxLength30","reduxForm","form","handleSubmit","onSubmit","_error","Field","placeholder","name","component","validate","loginButton","Login","loginFormWrapper","loginFormWrapper__formName","userInfo","password","SubmissionError","ADD_MESSAGE","EDIT_MESSAGE","SET_MESSAGE_EDIT_MOD","CHANGE_CHAT","SET_ACTIVE_MESSAGE","chatsList","activeChatId","chats","avaUrl","mediaFiles","users","userId","editMessageId","activeMessageField","messages","chatId","message","messageId","editMessage","setMessageEditMode","setActiveMessage","messagesReducer","stateCopy","map","e","NewMessage","textareaRef","validation","newMessageWrapper","newMessageWrapper__newMessageField","_edit","_fieldTextarea","autoFocus","onChange","current","ref","disabled","maxLength150","NewMessageContainer","React","forwardRef","useState","setHasError","useRef","undefined","addMessage","messagesData","Messages","messagesMap","useEffect","objDiv","document","getElementById","scrollTop","scrollHeight","messagesWrapper","MyMessage","myMessageWrapper","myMessageWrapper__message","myMessageWrapper__message_deleted","_editMode","myMessageWrapper__editWrapper","myMessageWrapper__editWrapper_edit","myMessageWrapper__editWrapper_delete","Message","user","messageWrapper","messageWrapper__avatar","messageWrapper__name","messageWrapper__message_deleted","messageWrapper__message","m","i","MyMessageContainer","elem","indexOf","MessagesField","messagesField","messagesField__messages","messagesField__newMessage","mapStateToPropForRedirect","ChatsList","chatsMap","ChatItem","changeChat","chatItem","chatItem__link","activeClassName","active","d","compose","Component","RedirectComponent","this","wrapper","wrapper_navigationList","wrapper_messagesField","Content","contentWrapper","path","render","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","App","AppWrapper","AppWrapper__header","HeaderContainer","AppWrapper__content","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.902c504e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1mfu5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"AvatarImage_avatar__1m-yB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentWrapper\":\"Content_contentWrapper__2m7iD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messagesWrapper\":\"Messages_messagesWrapper__3L23k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatsList\":\"ChatsList_chatsList__1IGGo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myMessageWrapper\":\"MyMessage_myMessageWrapper__2MLkt\",\"myMessageWrapper__message_deleted\":\"MyMessage_myMessageWrapper__message_deleted__2iFI6\",\"myMessageWrapper__message\":\"MyMessage_myMessageWrapper__message__3B7-A\",\"myMessageWrapper__editWrapper\":\"MyMessage_myMessageWrapper__editWrapper__1waO_\",\"myMessageWrapper__editWrapper_edit\":\"MyMessage_myMessageWrapper__editWrapper_edit__3wJBQ\",\"myMessageWrapper__editWrapper_delete\":\"MyMessage_myMessageWrapper__editWrapper_delete__1j6JM\",\"_editMode\":\"MyMessage__editMode__iZntV\"};","//renders the button in the style of the application\r\n\r\nimport style from \"./Button.module.css\";\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <button {...props} className={style.button}>{props.text}</button>\r\n    );\r\n}\r\n\r\nexport default Button;","//responsible for rendering the avatar\r\n\r\nimport style from \"./AvatarImage.module.css\";\r\n\r\nconst AvatarImage = ({link}) => {\r\n    return <div className={style.avatar}>\r\n        <img src={\r\n            link === '' ? 'https://banner2.cleanpng.com/20181130/zlz/kisspng-portable-network-graphics-avatar-computer-icons-im-ui-icon-icon-5c0174b58a31f3.0460868615435992855661.jpg'\r\n                : link } alt={\"avatar\"} />\r\n    </div>\r\n}\r\n\r\nexport default AvatarImage;","//renders a block of information about an authorized user\r\n\r\nimport style from \"./AuthInfo.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Button from \"../../Button/Button\";\r\nimport AvatarImage from \"../../AvatarImage/AvatarImage\";\r\n\r\n\r\nconst AuthInfoBar = ({isAuth, login, setUserData}) => {\r\n    return isAuth\r\n            ? (<div className={style.authInfoBar}>\r\n                <div className={style.authUser}>\r\n                    <AvatarImage link=\"\" /> {login}\r\n                </div>\r\n                <NavLink to=\"\" onClick={() => setUserData(null, null, null, false, false)}>\r\n                    <Button text={\"Logout\"}/>\r\n                </NavLink>\r\n            </div>)\r\n\r\n            : <NavLink to=\"\">\r\n                <Button text={\"Login\"}/>\r\n            </NavLink>\r\n}\r\n\r\nexport default AuthInfoBar;","//renders company name and authorization block with user data\r\n\r\nimport style from './Header.module.css';\r\nimport AuthInfo from \"./AuthInfo/AuthInfo\";\r\n\r\nconst Header = ({isAuth, id, login, ...props}) => {\r\n    return (\r\n        <div className={style.header}>\r\n            <div className={style.header__logo}>\r\n                Planktonics\r\n            </div>\r\n            <div className={style.header__authInfo}>\r\n                <AuthInfo isAuth={isAuth} login={login} setUserData={props.setUserData}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","const SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nlet initialState =\r\n    {\r\n        id: null,\r\n        email: null,\r\n        login: null,\r\n        isAuth: false,\r\n        rememberMe: false\r\n    };\r\n//check for locally saved data\r\nif (localStorage.getItem('authState') !== null) {\r\n    initialState = { ...JSON.parse(localStorage.getItem('authState'))}\r\n}\r\n//implementation for server requests\r\n//Thunks\r\n/*export const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.resultCode === 0) {\r\n        dispatch(setUserData(response.data.id, response.data.email, response.data.login, true));\r\n    }\r\n}\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n    if (response.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        let message = response.messages.length > 0 ? response.messages[0] : \"some error!\"\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n    if (response.resultCode === 0) {\r\n        dispatch(setUserData(null, null, null, false));\r\n    }\r\n}*/\r\n\r\n//Dispatches\r\nexport const setUserData = (id, email = null, login = null, isAuth, rememberMe) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {id, email, login, isAuth, rememberMe}\r\n});\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            localStorage.setItem('authState', JSON.stringify(action.payload));\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport default authReducer;","//provides access to the state using a \"connect\"\r\n\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {setUserData} from \"../../redux/auth-reducer\";\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    id: state.auth.id,\r\n    login: state.auth.login,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, { setUserData })(Header);","//renders an input field for redux-form with an error notification\r\n\r\nimport React from \"react\";\r\nimport style from \"./FormsControls.module.css\";\r\n\r\nexport const Input = ({input, meta: {touched, error}, ...props}) => {\r\n    const hasError = error && touched;\r\n    return (\r\n        <div className={style.wrapperInput}>\r\n            <div className={style.wrapperInput__formControlsInput + ' ' + (hasError ? style.error : '')}>\r\n                <input {...input} {...props} className={style.fieldInput}/>\r\n            </div>\r\n            { hasError && <span className={style.error}>{error}</span>}\r\n        </div>\r\n    );\r\n}","//Checking the mandatory filling of the input field.\r\nexport const required = value => {\r\n    if (value) return undefined;\r\n    else return \"Field is required!\";\r\n}\r\n//Checking the maximum length of an input field. You can create your own field length validators.\r\n//eg maxLengthCreator50 = maxLengthCreator(50)  -  max length 50 characters\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) return `Max length ${maxLength} symbols`;\r\n    else return undefined;\r\n}","import style from \"./LoginForm.module.css\"\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../../../FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../../utilities/validators/validators\";\r\nimport Button from \"../../../Button/Button\";\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (<form onSubmit={handleSubmit}>\r\n            <div className={style._error}>\r\n            {error && error}\r\n            </div>\r\n                <Field placeholder={\"Login or email\"}\r\n                       name={\"email\"}\r\n                       component={Input}\r\n                       validate={[required, maxLength30]}\r\n                />\r\n                <Field placeholder={\"Password\"}\r\n                       type={\"password\"}\r\n                       name={\"password\"}\r\n                       component={Input}\r\n                       validate={[required, maxLength30]}\r\n                />\r\n            <div>\r\n                <Field type={\"checkbox\"} name={\"rememberMe\"} component={\"input\"}/> remember me\r\n                <div className={style.loginButton}>\r\n                    <Button text={\"Login\"}/>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default reduxForm({form: 'login'})(LoginForm);\r\n","import style from \"./Login.module.css\"\r\nimport {Redirect} from \"react-router\";\r\nimport LoginForm from \"./LoginForm/LoginForm\";\r\n\r\nconst Login = ({isAuth, onSubmit, maxLength30}) => {\r\n    return (isAuth\r\n            ? <Redirect to={\"/chats/1\"}/>\r\n            : <div className={style.loginFormWrapper}>\r\n                    <div className={style.loginFormWrapper__formName}>\r\n                        Log In\r\n                    </div>\r\n                    <LoginForm onSubmit={onSubmit} maxLength30={maxLength30}/>\r\n                </div>\r\n    )\r\n};\r\n\r\nexport default Login;","import { SubmissionError } from 'redux-form'\r\nimport React from \"react\";\r\nimport Login from \"./Login\";\r\nimport {connect} from \"react-redux\";\r\nimport {setUserData} from \"../../../redux/auth-reducer\";\r\n\r\n\r\nconst LoginContainer = (props) => {\r\n\r\n    const userInfo = {\r\n        id: 8461,\r\n        email: \"test@gmail.com\",\r\n        login: \"VasiaPupkin\",\r\n        password: \"qwer1234\"\r\n    }\r\n\r\n    const onSubmit = ({email, password, rememberMe}) => {\r\n        if ((email === userInfo.email) && (password === userInfo.password)) {\r\n            props.setUserData(userInfo.id, userInfo.email, userInfo.login, true, rememberMe);\r\n        } else {\r\n            throw new SubmissionError({\r\n                _error: 'Login or password failed!!!'\r\n            })\r\n        }\r\n    }\r\n\r\n    return <Login {...props} onSubmit={onSubmit} />;\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {setUserData})(LoginContainer)","const ADD_MESSAGE = 'ADD_MESSAGE';\r\nconst EDIT_MESSAGE = 'EDIT_MESSAGE';\r\nconst SET_MESSAGE_EDIT_MOD = 'SET_MESSAGE_EDIT_MOD';\r\nconst CHANGE_CHAT = 'CHANGE_CHAT';\r\nconst SET_ACTIVE_MESSAGE = 'SET_ACTIVE_MESSAGE';\r\n\r\n\r\nlet initialState = {\r\n    chatsList: {\r\n        activeChatId: 1,\r\n        chats: [\r\n            {\r\n                name: 'WorksChat',\r\n                id: 1,\r\n                avaUrl: '',\r\n                mediaFiles: [{}],\r\n            },\r\n        {\r\n            name: 'flood',\r\n            id: 2,\r\n            avaUrl: '',\r\n            mediaFiles: [{}]\r\n        }\r\n        ]\r\n    },\r\n    users: [\r\n        {userId: 21, name: 'Andrey', avaUrl: '', mediaFiles: [{}]},\r\n        {userId: 22, name: 'Kate', avaUrl: '', mediaFiles: [{}]},\r\n        {userId: 23, name: 'Helen', avaUrl: '', mediaFiles: [{}]},\r\n        {userId: 24, name: 'Anna', avaUrl: '', mediaFiles: [{}]},\r\n        {userId: 25, name: 'Denis', avaUrl: '', mediaFiles: [{}]},\r\n        {userId: 26, name: 'Daniil', avaUrl: '', mediaFiles: [{}]},\r\n        {userId: 27, name: 'Sergey', avaUrl: '', mediaFiles: [{}]}\r\n    ],\r\n    editMessageId: 0,\r\n    activeMessageField: '',\r\n    messages: [\r\n        {chatId: 1, userId: 21, message: 'Hi!', messageId: 1},\r\n        {chatId: 1, userId: 21, message: 'How are you?', messageId: 2},\r\n        {chatId: 2, userId: 23, message: 'WTF!!!', messageId: 3},\r\n        {chatId: 2, userId: 23, message: 'Sorry', messageId: 4},\r\n        {chatId: 1, userId: 25, message: 'Not for you', messageId: 5},\r\n        {chatId: 2, userId: 26, message: 'I am Helga.', messageId: 6},\r\n        {chatId: 2, userId: 27, message: 'I am fine.', messageId: 7},\r\n        {chatId: 1, userId: 21, message: 'Hi!', messageId: 8},\r\n        {chatId: 1, userId: 22, message: 'How are you?', messageId: 9},\r\n        {chatId: 2, userId: 22, message: 'WTF!!!', messageId: 10},\r\n        {chatId: 2, userId: 24, message: 'Sorry', messageId: 11},\r\n        {chatId: 1, userId: 24, message: 'Not for you', messageId: 12},\r\n        {chatId: 2, userId: 26, message: 'I am Helga.', messageId: 13},\r\n        {chatId: 2, userId: 27, message: 'I am fine.', messageId: 14}\r\n    ]\r\n};\r\n\r\nif (localStorage.getItem('messagesState') !== null) {\r\n    initialState = { ...JSON.parse(localStorage.getItem('messagesState'))}\r\n}\r\n\r\nexport const changeChat = (chatId) => ({\r\n    type: CHANGE_CHAT,\r\n    chatId\r\n})\r\n\r\nexport const addMessage = (message, chatId, userId) => ({\r\n    type: ADD_MESSAGE,\r\n    message,\r\n    chatId,\r\n    userId\r\n});\r\nexport const editMessage = (message, messageId) => ({\r\n    type: EDIT_MESSAGE,\r\n    message,\r\n    messageId\r\n});\r\nexport const setMessageEditMode = (editMessageId) => ({\r\n    type: SET_MESSAGE_EDIT_MOD,\r\n    editMessageId\r\n});\r\nexport const setActiveMessage = (message) => ({\r\n    type: SET_ACTIVE_MESSAGE,\r\n    message\r\n});\r\n\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n\r\n    let stateCopy = {\r\n        ...state\r\n    }\r\n    switch (action.type) {\r\n        case CHANGE_CHAT: {\r\n            stateCopy.chatsList = {\r\n                ...state.chatsList,\r\n                activeChatId: action.chatId\r\n                };\r\n            return stateCopy;\r\n        }\r\n        case ADD_MESSAGE: {\r\n\r\n            stateCopy.messages = [\r\n                ...state.messages,\r\n                {\r\n                    chatId: action.chatId,\r\n                    userId: action.userId,\r\n                    message: action.message,\r\n                    messageId: state.messages.length + 1\r\n                }];\r\n            localStorage.setItem('messagesState', JSON.stringify(stateCopy));\r\n            return stateCopy;\r\n        }\r\n        case EDIT_MESSAGE: {\r\n            stateCopy.messages = stateCopy.messages.map( e => {\r\n                if (e.messageId === action.messageId) {\r\n                    return {\r\n                        ...e,\r\n                        message: action.message\r\n                    }\r\n                } else return e;\r\n            });\r\n            localStorage.setItem('messagesState', JSON.stringify(stateCopy));\r\n            return stateCopy;\r\n        }\r\n        case SET_MESSAGE_EDIT_MOD: {\r\n            stateCopy = {\r\n                ...state,\r\n                editMessageId: action.editMessageId,\r\n            }\r\n            localStorage.setItem('messagesState', JSON.stringify(stateCopy));\r\n            return stateCopy;\r\n        }\r\n        case SET_ACTIVE_MESSAGE: {\r\n            stateCopy = {\r\n                ...state,\r\n                activeMessageField: action.message,\r\n            }\r\n            localStorage.setItem('messagesState', JSON.stringify(stateCopy));\r\n            return stateCopy;\r\n        }\r\n        default: {\r\n            return stateCopy;\r\n        }\r\n    }\r\n};\r\n\r\nexport default messagesReducer;","//renders an input field with error visualization and edit mode\r\n\r\nimport style from './NewMessage.module.css';\r\nimport Button from \"../../../../Button/Button\";\r\n\r\nconst NewMessage = ({hasError, onSubmit, textareaRef, validation, activeMessageField, editMessageId}) => {\r\n    return (\r\n        <div className={style.newMessageWrapper}>\r\n            <div className={style.newMessageWrapper__newMessageField + ' '\r\n            + (editMessageId !== 0 ? style._edit : '') + ' '//highlight edit mode\r\n            + (hasError ? style.error : '')//highlight error mode\r\n            }>\r\n                <textarea className={style._fieldTextarea}\r\n                          autoFocus={true}\r\n                          name={\"message\"}\r\n                          placeholder={\"Input your message...\"}\r\n                          onChange={ () => validation(textareaRef.current.value)}\r\n                          ref={textareaRef}\r\n                          value={activeMessageField}\r\n                />\r\n                {//error message\r\n                    hasError && <span className={style._error}>{hasError}</span>\r\n                }\r\n            </div>\r\n            {//disable button on error\r\n                !hasError ? <div onClick={() => onSubmit(activeMessageField)}>\r\n                    <Button text={\"send\"}/>\r\n                </div>\r\n                : <div>\r\n                    <Button disabled=\"disabled\" text={\"send\"}/>\r\n                </div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewMessage;","//provides access to the state using a \"connect\", work with new(edit) message field\r\n\r\nimport {addMessage, setMessageEditMode, editMessage, setActiveMessage} from '../../../../../redux/messages-reducer';\r\nimport NewMessage from \"./NewMessage\";\r\nimport {connect} from \"react-redux\";\r\nimport {maxLengthCreator} from \"../../../../../utilities/validators/validators\";\r\nimport React from \"react\";\r\n\r\nconst maxLength150 = maxLengthCreator(150);//create new validator\r\n\r\nconst NewMessageContainer = React.forwardRef((props, ref) => {\r\n\r\n    let [hasError, setHasError] = React.useState(false);\r\n\r\n    const textareaRef = React.useRef(null);//get data from textarea field(new/edit message field)\r\n\r\n    const validation = (value) => {\r\n        setHasError(maxLength150(value) !== undefined\r\n            ? maxLength150(value) : false);\r\n        props.setActiveMessage(value);\r\n    }\r\n\r\n    const onSubmit = (value) => {//send a message or confirm editing\r\n        ((value !== '') && (\r\n            props.editMessageId === 0\r\n                ? props.addMessage(value, props.chatId, props.userId)\r\n                : props.editMessage(value, props.editMessageId)\r\n        ));\r\n        props.setActiveMessage('');\r\n        props.setMessageEditMode(0);\r\n    }\r\n\r\n    return <NewMessage {...props} validation={validation}\r\n                       onSubmit={onSubmit}\r\n                       textareaRef={textareaRef}\r\n                       hasError={hasError}/>\r\n});\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        userId: state.auth.id,\r\n        chatId: state.messagesData.chatsList.activeChatId,\r\n        editMessageId: state.messagesData.editMessageId,\r\n        activeMessageField: state.messagesData.activeMessageField,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,\r\n    {addMessage, setMessageEditMode,\r\n        editMessage, setActiveMessage}\r\n    )(NewMessageContainer);\r\n","//renders array of messages\r\n\r\nimport style from \"./Messages.module.css\";\r\nimport React, {useEffect} from \"react\";\r\n\r\n\r\nconst Messages = ({messagesMap}) => {\r\n    //scrolling the scroll when adding a new message\r\n    useEffect(() => {\r\n        const objDiv = document.getElementById('messagesWrapper');\r\n        objDiv.scrollTop = objDiv.scrollHeight;\r\n    },[messagesMap]);\r\n\r\n    return <div className={style.messagesWrapper} id='messagesWrapper' >\r\n        {messagesMap}\r\n    </div>\r\n}\r\n\r\nexport default Messages;","//renders message of an authorized user with buttons for the ability to delete and edit sent messages\r\n\r\nimport style from \"./MyMessage.module.css\";\r\n\r\nconst MyMessage = ({message, messageId, editMessage, editMessageId, setMessageEditMode, setActiveMessage}) => {\r\n\r\n    const deleteMessage = () => {\r\n        editMessage('', messageId);\r\n    }\r\n\r\n    const activateEditMode = () => {\r\n        setMessageEditMode(messageId);\r\n        setActiveMessage(message);//pass the message text to the active message field for editing\r\n    }\r\n    return (\r\n        <div className={style.myMessageWrapper}>\r\n            {(message === '')\r\n                ? <div className={`${style.myMessageWrapper__message} ${style.myMessageWrapper__message_deleted}`}>\r\n                    Message deleted\r\n                </div>\r\n                : <div>\r\n                    <div className={`${style.myMessageWrapper__message}  ${(editMessageId === messageId) && style._editMode}`}>\r\n                        {message}\r\n                    </div>\r\n                    { //edit and delete buttons\r\n                        (editMessageId !== messageId) && <div className={style.myMessageWrapper__editWrapper}>\r\n                        <span className={style.myMessageWrapper__editWrapper_edit} onClick={activateEditMode}>\r\n                                edit\r\n                        </span>\r\n                        <span className={style.myMessageWrapper__editWrapper_delete} onClick={deleteMessage}>\r\n                                delete\r\n                        </span>\r\n                    </div>}\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyMessage;","//provides access to the state using a \"connect\"\r\n\r\nimport {connect} from \"react-redux\";\r\nimport MyMessage from \"./MyMessage\";\r\nimport {editMessage, setActiveMessage, setMessageEditMode} from \"../../../../../../redux/messages-reducer\";\r\n\r\n\r\nlet myMessagesDataStateToProps = (state) => {\r\n    return {\r\n        editMessageId: state.messagesData.editMessageId,\r\n    };\r\n};\r\n\r\nexport default connect(myMessagesDataStateToProps, {editMessage, setMessageEditMode, setActiveMessage})(MyMessage);","//renders message and data of other users\r\n\r\nimport style from \"./Message.module.css\";\r\nimport AvatarImage from \"../../../../../AvatarImage/AvatarImage\";\r\n\r\n\r\nconst Message = ({message, user}) => {\r\n    return (\r\n        <div className={style.messageWrapper}>\r\n\r\n            <div className={style.messageWrapper__avatar}>\r\n                <AvatarImage link={user.avaUrl}/>\r\n            </div>\r\n\r\n            <div className={style.messageWrapper__name}>\r\n                {user.name}\r\n            </div>\r\n\r\n            {(message === '')\r\n                ? <div className={`${style.messageWrapper__message_deleted} ${style.messageWrapper__message}`}>\r\n                    Message deleted\r\n                </div>\r\n                : <div className={style.messageWrapper__message}>\r\n                    { message }\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Message;","//provides access to the state using a \"connect\", selects the desired messages of a specific chat,\r\n// determines the messages of an authorized user,\r\n\r\nimport {connect} from \"react-redux\";\r\nimport Messages from \"./Messages\";\r\nimport MyMessageContainer from \"./MyMessage/MyMessageContainer\";\r\nimport Message from \"./Message/Message\";\r\n\r\nconst MessagesContainer = ({chatId, ...props}) => {\r\n    //select messages of a specific chat\r\n    let messagesMap = props.messages.map((m, i) => {\r\n        if (m.chatId === chatId) {\r\n            //find our messages\r\n            return (props.userId === m.userId)\r\n                ? <MyMessageContainer messageId={m.messageId} message={m.message} key={i}/>\r\n                : (() => {\r\n                    let userId = props.users.map( (elem) => m.userId === elem.userId).indexOf(true);\r\n                    let user = props.users[userId];\r\n                    return (<Message message={m.message} user={user} key={i}/>)\r\n                })();\r\n        }\r\n        return '';\r\n    });\r\n    return <Messages messagesMap={messagesMap}/>\r\n}\r\n\r\nlet mapMessagesDataStateToProps = (state) => {\r\n    return {\r\n        messages: state.messagesData.messages,\r\n        chatId: state.messagesData.chatsList.activeChatId,\r\n        userId: state.auth.id,\r\n        users: state.messagesData.users,\r\n    };\r\n};\r\n\r\nexport default connect(mapMessagesDataStateToProps, {})(MessagesContainer);","//renders a message field with a new message input field\r\n\r\nimport style from './MessagesField.module.css';\r\nimport NewMessageContainer from './NewMessage/NewMessageContainer';\r\nimport MessagesContainer from \"./Messages/MessagesContainer\";\r\n\r\nconst MessagesField = () => {\r\n    return (\r\n        <div className={style.messagesField}>\r\n            <div className={style.messagesField__messages}>\r\n                <MessagesContainer />\r\n            </div>\r\n            <div className={style.messagesField__newMessage}>\r\n                <NewMessageContainer />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MessagesField;","//responsible for redirect in the absence of authorization\r\n\r\nimport {Redirect} from \"react-router\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth}\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Redirect to={\"\"}/>\r\n            } else return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropForRedirect)(RedirectComponent);\r\n}","//renders a list of chats (groups)\r\n\r\nimport style from \"./ChatsList.module.css\";\r\n\r\nconst ChatsList = ({chatsMap}) => {\r\n        return (\r\n            <div className={style.chatsList}>\r\n                {chatsMap}\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default ChatsList;","//responsible for rendering the chat (group) and visualizing the process\r\nimport style from \"./ChatItem.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst ChatItem = ({id, name, changeChat}) => {\r\n    return (\r\n        <div className={style.chatItem}>\r\n            <NavLink className={style.chatItem__link}\r\n                     activeClassName={style.active}\r\n                     to={\"/chats/\" + id}\r\n                     onClick={()=> changeChat(id) }>{name}</NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatItem;","//provides access to the state using a \"connect\", gets a list of chats (groups)\r\n\r\nimport {connect} from \"react-redux\";\r\nimport {changeChat} from \"../../../../redux/messages-reducer\";\r\n\r\nimport ChatsList from \"./ChatsList\";\r\nimport ChatItem from \"./ChatItem/ChatItem\";\r\n\r\nconst ChatsListContainer = (props) => {\r\n    let chatsMap = props.chats.map(d => <ChatItem changeChat={props.changeChat}\r\n                                                  name={d.name} id={d.id} key={d.id}/>);\r\n    return <ChatsList chatsMap={chatsMap}/>\r\n}\r\n\r\nlet mapDialogsStateToProps = (state) => {\r\n    return {\r\n        chats: state.messagesData.chatsList.chats,\r\n    };\r\n};\r\n\r\nexport default connect(mapDialogsStateToProps, {changeChat})(ChatsListContainer);","// renders the main block of the application, which is visible after authorization,\r\n// and is divided into 2 blocks\r\n\r\nimport MessagesField from \"./MessagesField/MessagesField\";\r\nimport style from \"./Chats.module.css\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\nimport ChatsListContainer from \"./ChatsList/ChatsListContainer\";\r\n\r\nconst Chats = () => {\r\n    return <div className={style.wrapper}>\r\n        <div className={style.wrapper_navigationList}>\r\n            <ChatsListContainer />\r\n        </div>\r\n        <div className={style.wrapper_messagesField}>\r\n            <MessagesField />\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect\r\n)(Chats);","//renders the block using Route\r\n\r\nimport style from \"./Content.module.css\";\r\nimport {Route} from \"react-router-dom\";\r\nimport LoginContainer from \"./Login/LoginContainer\";\r\nimport React from \"react\";\r\nimport Chats from \"./Chats/Chats\";\r\n\r\nconst Content = () => {\r\n    return (\r\n        <div className={style.contentWrapper}>\r\n            <Route path=\"/chats/:id\" render={ () => <Chats /> }/>\r\n            <Route path=\"\"  render={ () => <LoginContainer /> }/>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Content;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nimport messagesReducer from \"./messages-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    messagesData: messagesReducer\r\n});\r\n\r\nconst store = createStore(reducers, compose(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;\r\n","import style from './App.module.css';\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Content from \"./components/Content/Content\";\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./redux/redux-store\";\r\n\r\nfunction App() { //use HashRouter only for github-pages, usually use BrowserRouter\r\n    return (\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <div className={style.AppWrapper}>\r\n                    <div className={style.AppWrapper__header}>\r\n                        <HeaderContainer />\r\n                    </div>\r\n                    <div className={style.AppWrapper__content}>\r\n                        <Content/>\r\n                    </div>\r\n                </div>\r\n            </Provider>\r\n        </HashRouter>\r\n\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newMessageWrapper\":\"NewMessage_newMessageWrapper__VgQD2\",\"newMessageWrapper__newMessageField\":\"NewMessage_newMessageWrapper__newMessageField__3TBQS\",\"error\":\"NewMessage_error__rwIj_\",\"_edit\":\"NewMessage__edit__1J4nc\",\"_error\":\"NewMessage__error__XJr9f\",\"_fieldTextarea\":\"NewMessage__fieldTextarea__3sWPd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageWrapper\":\"Message_messageWrapper__1jfy_\",\"messageWrapper__message\":\"Message_messageWrapper__message__3RUoF\",\"messageWrapper__message_deleted\":\"Message_messageWrapper__message_deleted__sBJQM\",\"messageWrapper__avatar\":\"Message_messageWrapper__avatar__3exYV\",\"messageWrapper__name\":\"Message_messageWrapper__name__2qwu_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperInput\":\"FormsControls_wrapperInput__Odtcw\",\"wrapperInput__formControlsInput\":\"FormsControls_wrapperInput__formControlsInput__cmDin\",\"fieldInput\":\"FormsControls_fieldInput__l9aN8\",\"error\":\"FormsControls_error__1NR49\",\"_error\":\"FormsControls__error__1ML1y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppWrapper\":\"App_AppWrapper__1VQ0j\",\"AppWrapper__header\":\"App_AppWrapper__header__2up5N\",\"AppWrapper__content\":\"App_AppWrapper__content__4qQv9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__VoiUO\",\"header__logo\":\"Header_header__logo__32Rwo\",\"header__authInfo\":\"Header_header__authInfo__dRe4A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messagesField\":\"MessagesField_messagesField__3BiPZ\",\"messagesField__messages\":\"MessagesField_messagesField__messages__3xMJl\",\"messagesField__newMessage\":\"MessagesField_messagesField__newMessage__3cX4a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Chats_wrapper__1CY02\",\"wrapper_navigationList\":\"Chats_wrapper_navigationList__2OsTh\",\"wrapper_messagesField\":\"Chats_wrapper_messagesField__3KTwk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatItem\":\"ChatItem_chatItem__3RJZW\",\"chatItem__link\":\"ChatItem_chatItem__link__15VM7\",\"active\":\"ChatItem_active__2jOei\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"authInfoBar\":\"AuthInfo_authInfoBar__1oGuG\",\"authUser\":\"AuthInfo_authUser__1w3NZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginFormWrapper\":\"Login_loginFormWrapper__3VvUV\",\"loginFormWrapper__formName\":\"Login_loginFormWrapper__formName__1u-a3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_error\":\"LoginForm__error__OAKAN\",\"loginButton\":\"LoginForm_loginButton__HDEXR\"};"],"sourceRoot":""}